@use "./variables" as *;

// Buttons
@mixin btn($bg, $text) {
  background-color: $bg;
  border-radius: $border-radius;
  color: $text;
  border: 1px solid $bg;
  cursor: pointer;
  font-size: 1.4rem;
  font-weight: 500;
  line-height: 1.6rem;
  transition: all 0.5s;

  &:hover {
    @if ($bg != $color-white) {
      background-color: darken($bg, 12%);
      border: 1px solid darken($bg, 12%);
    }
  }
}

// Forms
@mixin form {
  label {
    font-size: 1.2rem;
    line-height: 1.6rem;
  }

  input {
    background-color: #f7f9fc;
    border-radius: $border-radius;
    border: 1px solid $color-light-blue;
    color: $color-gray;
    font-family: inherit;
    font-size: inherit;
    outline: 0;
    padding: 1.4rem 1.6rem;
  }

  input::placeholder {
    color: $color-gray;
  }

  input:active,
  input:focus {
    border: 1px solid opacify($color-light-blue, 0.5);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),
      0 0 8px opacify($color-light-blue, 0.5);
  }

  .form__group {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
  }

  .form__group:not(.form__group:last-of-type) {
    margin-bottom: 2.4rem;
  }
}

// Media queries
@mixin sm {
  @media (min-width: map-get($breakpoints, "sm")) {
    @content;
  }
}

@mixin md {
  @media (min-width: map-get($breakpoints, "md")) {
    @content;
  }
}

@mixin lg {
  @media (min-width: map-get($breakpoints, "lg")) {
    @content;
  }
}

@mixin xl {
  @media (min-width: map-get($breakpoints, "xl")) {
    @content;
  }
}

@mixin xxl {
  @media (min-width: map-get($breakpoints, "xxl")) {
    @content;
  }
}

@mixin breakpoint($min-width) {
  @media (min-width: $min-width) {
    @content;
  }
}
